// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Test = require('../config/testConfig.js');

contract('TestSquareVerifier', accounts => {

    before('setup contract', async () => {
        config = await Test.Config(accounts);
        proof = config.proof["proof"];
        inputs = config.proof["inputs"];
    });

    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    it('verifies the proof correctly', async () => {
        let result = await config.verifier.verifyTx.call(proof.a, proof.b, proof.c, inputs);
        assert(result == true, "Verification result should be correct");
    });

    // Test verification with incorrect proof
    it('verifies the proof incorrectly', async () => {
        let result = await config.verifier.verifyTx.call(proof.a, proof.b, proof.a, inputs);
        assert(result == false, "Verification result should be incorrect");
    });
});
